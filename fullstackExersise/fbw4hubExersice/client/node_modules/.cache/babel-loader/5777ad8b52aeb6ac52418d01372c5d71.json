{"ast":null,"code":"var _jsxFileName = \"/home/philipp/Desktop/JS-EX1/JavaScript/fullstackExersise/fbw4hub/src/components/layout/Alert.jsx\";\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport Alert from 'react-bootstrap/Alert';\n\nconst Alerts = () => {\n  const [show, setShow] = useState(false);\n  const [msg, setMsg] = useState('dummy massage');\n  const [variant, setVariant] = useState('danger');\n  return /*#__PURE__*/React.createElement(Alert, {\n    show: show,\n    variant: variant,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }\n  }, msg);\n};\n\nconst mapStateToProps = state => ({\n  alert: state.alert.alert,\n  alert: state.alert.msg,\n  alert: state.alert.type\n});\n\nexport default connect(mapStateToProps)(Alerts);","map":{"version":3,"sources":["/home/philipp/Desktop/JS-EX1/JavaScript/fullstackExersise/fbw4hub/src/components/layout/Alert.jsx"],"names":["React","useState","connect","Alert","Alerts","show","setShow","msg","setMsg","variant","setVariant","mapStateToProps","state","alert","type"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,KAAP,MAAkB,uBAAlB;;AAEA,MAAMC,MAAM,GAAG,MAAM;AACnB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,KAAD,CAAhC;AACA,QAAM,CAACM,GAAD,EAAMC,MAAN,IAAgBP,QAAQ,CAAC,eAAD,CAA9B;AACA,QAAM,CAACQ,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,QAAD,CAAtC;AACA,sBACE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAEI,IAAb;AAAmB,IAAA,OAAO,EAAEI,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,GADH,CADF;AAKD,CATD;;AAWA,MAAMI,eAAe,GAAGC,KAAK,KAAK;AAChCC,EAAAA,KAAK,EAAED,KAAK,CAACC,KAAN,CAAYA,KADa;AAEhCA,EAAAA,KAAK,EAAED,KAAK,CAACC,KAAN,CAAYN,GAFa;AAGhCM,EAAAA,KAAK,EAAED,KAAK,CAACC,KAAN,CAAYC;AAHa,CAAL,CAA7B;;AAMA,eAAeZ,OAAO,CAACS,eAAD,CAAP,CAAyBP,MAAzB,CAAf","sourcesContent":["import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport Alert from 'react-bootstrap/Alert';\n\nconst Alerts = () => {\n  const [show, setShow] = useState(false);\n  const [msg, setMsg] = useState('dummy massage');\n  const [variant, setVariant] = useState('danger');\n  return (\n    <Alert show={show} variant={variant}>\n      {msg}\n    </Alert>\n  );\n};\n\nconst mapStateToProps = state => ({\n  alert: state.alert.alert,\n  alert: state.alert.msg,\n  alert: state.alert.type,\n});\n\nexport default connect(mapStateToProps)(Alerts);\n"]},"metadata":{},"sourceType":"module"}